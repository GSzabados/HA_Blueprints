blueprint:
  name: Send a camera snapshot when contact opens.
  description: >
    This automation blueprint creates a camera snapshot if motion is detected 
    and sends a notification to your phone with the picture.
  domain: automation
  input:
    contact_sensor:
      name: Contact sensor
      description: The sensor which triggers the snapshot creation
      selector:
          entity:
            domain: binary_sensor
            device_class: door

    is_opened:
      name: Trigger the snapshot on opening?
      description: Toggle if your don't want a snapshot when the contact opens
      selector:
        boolean:
      default: true

    is_closed:
      name: Trigger the snapshot on closing?
      description: Toggle if your want a snapshot when the contact closes
      selector:
        boolean:
      default: false


    camera:
      name: Camera
      description: The camera which creates the snapshot
      selector:
        entity:
          domain: camera

    notify_device:
      name: Device to notify
      description: Device needs to run the official Home Assistant app to receive notifications
      selector:
        device:
          integration: mobile_app

    is_ios:
      name: Is it an iOS device?
      description: Toggle if your selected device runs iOS, default is Android
      selector:
        boolean:
      default: false

    notification_title:
      name: Notification title (Optional)
      description: 'Default: "Contact opened!"'
      default: "Contact opened!"

    notification_message:
      name: Notification message (Optional)
      description: 'Default: "{{ contact_sensor_name }} is open!"'
      default: "{{ contact_sensor_name }} is open!"
      
    delay:
      name: Delay (Optional)
      description: Wait before creating camera snapshot
      default: ""
      selector:
        number:
            min: 0
            max: 300
            unit_of_measurement: seconds
            mode: slider

trigger:
  platform: state
  entity_id: !input contact_sensor
  from: "off"
  to: "on"
  platform: state
  entity_id: !input contact_sensor
  from: "on"
  to: "off"

variables:
  contact_sensor: !input contact_sensor
  contact_sensor_name: "{{ states[contact_sensor].name }}"
  camera: !input camera
  notify_device: !input notify_device
  is_ios: !input is_ios
  is_opened: !input is_opened
  is_closed: !input is_closed
  notification_title: !input notification_title
  notification_message: !input notification_message
  delay: !input delay
  snapshot_create_file_path: "/config/www/tmp/snapshot_{{ states[camera].object_id }}.jpg"
  snapshot_access_file_path: "{{ snapshot_create_file_path | replace('/config/www','/local') }}"

action:
  - choose:
      - conditions:
          - condition: template
            # Trigger on opening
            value_template: "{{ !input is_opened == True and states[contact_sensor].state == 'on' }}"
            
        sequence:
          - delay: "{{ delay }}"

          - service: camera.snapshot
            entity_id: !input camera
            data:
              filename: "{{ snapshot_create_file_path }}"

          - device_id: !input notify_device
            domain: mobile_app
            type: notify
            title: "{{ notification_title }}"
            message: "{{ notification_message }}"
            data: >
              {% set android_data = {"image": "%s"} | format(snapshot_access_file_path) %}
              {% set ios_data = {"attachment": {"url": "%s", "content_type": "JPEG"}} | format(snapshot_access_file_path) %}
              {{ ios_data if is_ios else android_data }}

      - conditions:
          - condition: template
            # Trigger on opening
            value_template: "{{ is_closed == true and state.contact_sensor == 'off' }}"
            
        sequence:
          - delay: "{{ delay }}"

          - service: camera.snapshot
            entity_id: !input camera
            data:
              filename: "{{ snapshot_create_file_path }}"

          - device_id: !input notify_device
            domain: mobile_app
            type: notify
            title: "{{ notification_title }}"
            message: "{{ notification_message }}"
            data: >
              {% set android_data = {"image": "%s"} | format(snapshot_access_file_path) %}
              {% set ios_data = {"attachment": {"url": "%s", "content_type": "JPEG"}} | format(snapshot_access_file_path) %}
              {{ ios_data if is_ios else android_data }}

